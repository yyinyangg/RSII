/*
 * Automatically generated by libJConfig-4.0-alpha0 @ rs2[fddccd3]
 * Generated From: ourSpi.jc4 (/home/rs01/RS2/Versuch1/ourSpi.jc4)
 * Generated at Tue May 16 14:11:25 CEST 2023
 * jConfig Built on Tue Nov 26 09:26:22 CET 2019, Build Hash E3AA1574
 *
 * Linker Script
 */

/*
 * The following file is in SpartanMC 32bit ELF-Format.
 * 1 Target Word will occupy 4 ELF-bytes in binaries. 1 Target Byte 2 ELF-bytes.
 */

/*
 * Generate better error messages for people who use stdio functions and do not set stdout
 */
PROVIDE(__stdout_missing = 0);
PROVIDE(stdout = __stdout_missing);
ASSERT(!DEFINED(__stdout_missing), "stdout undefined. In order to use standard output, please define a global variable stdout as FILE * and initialize it to point to your peripheral FILE, for example: FILE * stdout = &UART_LIGHT_0_FILE;");

/*
 * Generate better error messages for people who use stdio functions and do not set stdin
 */
PROVIDE(__stdin_missing = 0);
PROVIDE(stdin = __stdin_missing);
ASSERT(!DEFINED(__stdin_missing), "stdin undefined. In order to use standard input, please define a global variable stdin as FILE * and initialize it to point to your peripheral FILE, for example: FILE * stdin = &UART_LIGHT_0_FILE;");

spartanmc_spartanmc_mem_local_mem = 0x0; /* internally at daddr 0x0, caddr 0x0 */
spartanmc_i2c_master = 0x7f000; /* internally at daddr 0x3f800, caddr 0x1fc00 */
spartanmc_port_out = 0x7f080; /* internally at daddr 0x3f840, caddr 0x1fc20 */
spartanmc_spi_master = 0x7f040; /* internally at daddr 0x3f820, caddr 0x1fc10 */
spartanmc_uart_light = 0x7f060; /* internally at daddr 0x3f830, caddr 0x1fc18 */

INT_COUNT = 0;
EXTERN( __loader );

PROVIDE(_trap_table = __endLoop); /* ensure that _trap_table exists, because startup writes it to SFR_TR */
PROVIDE(_intr_handle = __endLoop); /* ensure that _intr_handle exists, because startup writes it to SFR_IV */
ENTRY("__start");

MEMORY {
	spartanmc_spartanmc_mem_local_mem        (wx) : ORIGIN = 0x0          , LENGTH = 0x8000 /*  */
}

SECTIONS {
	. = 0x0;
	.startup                                 :                {
		*          ( crt0.o          )
	}> spartanmc_spartanmc_mem_local_mem

	.init_array                 ALIGN ( 0x4 ) :                {
		PROVIDE_HIDDEN ( __init_array_start = . );
		KEEP ( * ( SORT_BY_INIT_PRIORITY ( .init_array.* ) SORT_BY_INIT_PRIORITY ( .ctors.* ) ) )
		KEEP ( * ( .init_array EXCLUDE_FILE ( *crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .ctors ) )
		PROVIDE_HIDDEN ( __init_array_end = . );
	}> spartanmc_spartanmc_mem_local_mem

	.fini_array                 ALIGN ( 0x4 ) :                {
		PROVIDE_HIDDEN ( __fini_array_start = . );
		KEEP ( * ( SORT_BY_INIT_PRIORITY ( .fini_array.* ) SORT_BY_INIT_PRIORITY ( .dtors.* ) ) )
		KEEP ( * ( .fini_array EXCLUDE_FILE ( *crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .dtors ) )
		PROVIDE_HIDDEN ( __fini_array_end = . );
	}> spartanmc_spartanmc_mem_local_mem

	.ctors                      ALIGN ( 0x4 ) :                {
		KEEP ( *crtbegin.o ( .ctors ) )
		KEEP ( *crtbegin?o ( .ctors ) )
		KEEP ( * ( EXCLUDE_FILE ( *crtend.o *crtend?.o ) .ctors ) )
		KEEP ( * ( SORT ( .ctors.* ) ) )
		KEEP ( * ( .ctors ) )
	}> spartanmc_spartanmc_mem_local_mem

	.dtors                      ALIGN ( 0x4 ) :                {
		KEEP ( *crtbegin.o ( .dtors ) )
		KEEP ( *crtbegin?o ( .dtors ) )
		KEEP ( * ( EXCLUDE_FILE ( *crtend.o *crtend?.o ) .dtors ) )
		KEEP ( * ( SORT ( .dtors.* ) ) )
		KEEP ( * ( .dtors ) )
	}> spartanmc_spartanmc_mem_local_mem

	.loader.text                ALIGN ( 0x4 ) :                {
		KEEP ( *          ( .loader.text    ) )
	}> spartanmc_spartanmc_mem_local_mem

	.loader.data                ALIGN ( 0x4 ) :                {
		KEEP ( *          ( .loader.data    ) )
	}> spartanmc_spartanmc_mem_local_mem

	.init                       ALIGN ( 0x4 ) :                {
		*          ( .init           )
	}> spartanmc_spartanmc_mem_local_mem

	.fini                       ALIGN ( 0x4 ) :                {
		*          ( .fini           )
	}> spartanmc_spartanmc_mem_local_mem

	.text                       ALIGN ( 0x4 ) :                {
		*          ( .text .text.*   )
	}> spartanmc_spartanmc_mem_local_mem

	.data                       ALIGN ( 0x4 ) :                {
		*          ( .data           )
	}> spartanmc_spartanmc_mem_local_mem

	.bss                        ALIGN ( 0x4 ) :                {
		*          ( .bss            )
	}> spartanmc_spartanmc_mem_local_mem

	.sdata                      ALIGN ( 0x4 ) :                {
		*          ( .sdata          )
	}> spartanmc_spartanmc_mem_local_mem

	.sbss                       ALIGN ( 0x4 ) :                {
		*          ( .sbss           )
	}> spartanmc_spartanmc_mem_local_mem

	.rodata                     ALIGN ( 0x4 ) :                {
		*          ( .rodata         )
	}> spartanmc_spartanmc_mem_local_mem

	.srodata                    ALIGN ( 0x4 ) :                {
		*          ( .srodata        )
	}> spartanmc_spartanmc_mem_local_mem

	.traps                      ALIGN ( 0x400 ) :                {
		*          ( .traps .interrupt )
	}> spartanmc_spartanmc_mem_local_mem

	.intr_tab                   ALIGN ( 0x4 ) :                {
		__INTR_TAB__ = .;
		LONG( 0 ) /* CC backup */
	}> spartanmc_spartanmc_mem_local_mem

	__HEAP_START = .;
	/* STACK / HEAP from now on */
	STACK_TOP = 0x8000; /* internally at daddr 0x4000, caddr 0x2000 */

}

